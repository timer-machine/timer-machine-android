plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.kapt)
    alias(libs.plugins.hilt)

    alias(libs.plugins.gms)
    alias(libs.plugins.dependencyGuard)
}

android {
    namespace 'io.github.deweyreed.timer'
    defaultConfig {
        applicationId "io.github.deweyreed.timer"
        versionCode libs.versions.versionCode.get() as Integer
        versionName libs.versions.versionName.get()
        testInstrumentationRunner "io.github.deweyreed.timer.TestRunner"
        vectorDrawables.useSupportLibrary true

        archivesBaseName = "TimeR.Machine-v${versionName}(${versionCode})"
        resourceConfigurations += ['en', 'es', 'nl', 'zh-rCN', 'zh-rHK', 'zh-rTW']
    }

    buildTypes {
        debug {
            versionNameSuffix "-dev"
            applicationIdSuffix '.dev'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions += "market"
    productFlavors {
        dog {
            dimension "market"
            versionNameSuffix "-dog"
            applicationIdSuffix ".dog"
        }

        google {
            dimension "market"
            applicationIdSuffix ".google"
        }

        other {
            dimension "market"
            applicationIdSuffix ".other"
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    buildFeatures {
        buildConfig = true
        viewBinding = true
    }
    packagingOptions {
        resources {
            excludes += [
                    'META-INF/library_release.kotlin_module',
                    'META-INF/library-core_release.kotlin_module',
            ]
        }
    }

    lint {
        checkDependencies true
        warningsAsErrors true
    }
}

dependencies {
    implementation project(':domain')
    implementation project(':data')
    implementation project(':presentation')
    implementation project(':app-base')
    implementation project(':app-scheduler')
    implementation project(':app-backup')
    implementation project(':app-settings')
    implementation project(':app-tasker')
    implementation project(':app-intro')
    implementation project(':app-timer-edit')
    implementation project(':app-timer-run')
    implementation project(':app-timer-list')
    implementation project(':app-timer-one')
    implementation project(':component-key')
    implementation project(':component-main')
    implementation project(':component-settings')
    implementation project(':component-tts')
    googleImplementation project(':flavor-google')
    dogImplementation project(':app-analytics-fake')
    googleImplementation project(':app-analytics')
    otherImplementation project(':app-analytics-fake')

    implementation libs.tools

    implementation libs.kotlin.coroutines.android

    androidTestImplementation libs.bundles.mockito.android
    androidTestImplementation libs.bundles.androidx.test
    androidTestImplementation libs.bundles.androidx.test.espresso
    androidTestImplementation libs.hmsPicker
    androidTestImplementation libs.scrollHmsPicker
    androidTestImplementation libs.hilt.testing
    kaptAndroidTest libs.hilt.compiler

    implementation libs.androidx.appcompat
    implementation libs.androidx.recyclerView
    implementation libs.androidx.preference
    implementation libs.androidx.constraintLayout
    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.lifecycle.liveData
    implementation libs.androidx.lifecycle.viewModel

    implementation libs.material

    debugImplementation libs.leakCannary

    implementation libs.androidx.room.runtime

    implementation libs.androidx.navigation.fragment
    implementation libs.androidx.navigation.ui

    implementation libs.androidx.work

    implementation libs.hilt.android
    kapt libs.hilt.compiler
    implementation libs.hilt.work

    implementation libs.okio
    implementation libs.permission

    implementation libs.flexbox
    implementation libs.materialDrawer
    implementation libs.scrollHmsPicker
    implementation libs.theme
    implementation libs.toggleButtonGroup
    implementation libs.ultimateRingtonePicker
    implementation libs.verticalStepperForm
    implementation libs.coil
    implementation libs.coil.gif

    androidTestCompileOnly libs.taskerPlugin
}

android.applicationVariants.configureEach { variant ->
    if (variant.name.contains('dog') || variant.name.contains('other')) {
        project.tasks.named('process' + variant.name.capitalize() + 'GoogleServices').getOrNull()?.enabled = false
    }
}

dependencyGuard {
    configuration("dogReleaseRuntimeClasspath") {
        modules true
    }
    configuration("googleReleaseRuntimeClasspath") {
        modules true
    }
    configuration("otherReleaseRuntimeClasspath") {
        modules true
    }
}
